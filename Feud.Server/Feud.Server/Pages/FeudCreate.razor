@page "/feud/new"
@using Feud.Server.Data
@using Feud.Server.Services
@inject NavigationManager NavigationManager
@inject IFeudHostService FeudHostService
 
@if (_board != null)
{
	<h3>New Question Board</h3>
	<div>
		<div>
			Name
			<input @bind="_board.Name" type="text" maxlength="50"/>
		</div>
		<div>
			Question
			<input @bind="_board.Question" type="text" maxlength="200"/>
		</div>
		<div>
			Answers
			<textarea @bind="_board.AnswerBlob" maxlength="5000"></textarea>
		</div>
		<div>
			<button @onclick="CreateBoard">Create</button>
		</div>
	</div>
}

@code {
	public NewBoardViewModel _board { get; set; }

	protected override void OnInitialized()
	{
		_board = new NewBoardViewModel();

		//TEST ONLY
		_board.Name = "Tadpooly Feud";
		_board.Question = "Favorite Food";
		_board.AnswerBlob = $"Pizza,45\nSteak,25\nFish,15\nHamburgers,8\nHot Dogs,3\nCaviar,1\nGummy Bears,1";
	}

	protected void CreateBoard()
	{
		var board = new QuestionBoard
		{
			Name = _board.Name,
			Question = _board.Question
		};

		var answerLines = _board.AnswerBlob.Split("\n");

		var answerNumber = 1;

		foreach (var answerLine in answerLines)
		{
			if (!string.IsNullOrEmpty(answerLine))
			{
				var values = answerLine.Split(',');

				var answer = new QuestionAnswer
				{
					Number = answerNumber++,
					Text = values[0],
					Points = values.Length > 1 ? int.Parse(values[1]) : 0
				};

				board.Answers.Add(answer);
			}
		}

		FeudHostService.AddBoard(board);
		NavigationManager.NavigateTo($"feud/host/{board.Id}");

	}



	public class NewBoardViewModel
	{
		public string Name { get; set; }
		public string Question { get; set; }
		public string AnswerBlob { get; set; }
	}
}
